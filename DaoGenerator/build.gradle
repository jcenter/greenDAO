apply plugin: 'java'
//apply plugin: 'maven'
//apply plugin: 'signing'

//
//group = 'de.greenrobot'
//archivesBaseName = 'greendao-generator'
//version = '3.1.1-SNAPSHOT'
//sourceCompatibility = 1.7
//
//ext {
//    sonatypeUsername = "admin"
//    sonatypePassword = "password"
//}
//
//def isSnapshot = version.endsWith('-SNAPSHOT')
//def sonatypeRepositoryUrl
//if(isSnapshot) {
//    sonatypeRepositoryUrl = "https://oss.sonatype.org/content/repositories/snapshots/"
//} else {
//    sonatypeRepositoryUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2/"
//}

repositories {
    mavenCentral()
}

// provided is not supported in Gradle 1.4, see http://issues.gradle.org/browse/GRADLE-784
// Like this, it won't appear at all in the POM
configurations {
    provided
    deployerJars
}

dependencies {
    compile 'org.freemarker:freemarker:2.3.23'
    testCompile 'junit:junit:4.12'
    // deployerJars 'org.apache.maven.wagon:wagon-webdav-jackrabbit:2.4'
    deployerJars 'org.apache.maven.wagon:wagon-webdav:1.0-beta-2'
}

sourceSets {
    main {
        java {
            srcDir 'src'
        }
        resources {
            srcDir 'src-template'
        }
    }
    test {
        java {
            srcDir 'src-test'
        }
    }
}

test {
    doFirst {
        mkdir 'test-out'
    }
    doLast{
        delete 'test-out'
    }
}

javadoc {
    failOnError = false
    title = "greenDAO Generator ${version} API"
    // Unfinished APIs:
    excludes = ['de/greenrobot/daogenerator/Query*']
    options.bottom = 'Available under the GPLv3 - <i>Copyright &#169; 2011-2015 <a href="http://greenrobot.de/">greenrobot.de</a>. All Rights Reserved.</i>'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

//signing {
//    if(project.hasProperty('signing.keyId') && project.hasProperty('signing.password') &&
//    project.hasProperty('signing.secretKeyRingFile')) {
//        sign configurations.archives
//    } else {
//        println "Signing information missing/incomplete for ${project.name}"
//        sign configurations.archives
//    }
//}
//
//
//
//uploadArchives {
//    repositories {
//        mavenDeployer {
//            if(project.hasProperty('preferedRepo') && project.hasProperty('preferedUsername')
//                && project.hasProperty('preferedPassword')) {
//                configuration = configurations.deployerJars
//                repository(url: preferedRepo) {
//                    authentication(userName: preferedUsername, password: preferedPassword)
//                }
//            } else if(project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
//                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }
//                repository(url: sonatypeRepositoryUrl) {
//                    authentication(userName: sonatypeUsername, password: sonatypePassword)
//                }
//            } else {
//                println "Settings sonatypeUsername/sonatypePassword missing/incomplete for ${project.name}"
//            }
//
//            pom.project {
//               name 'greenDAO Generator'
//               packaging 'jar'
//               description 'Code generator for greenDAO, the light and fast ORM for Android'
//               url 'http://greendao-orm.com'
//
//               scm {
//                   url 'https://github.com/greenrobot/greenDAO'
//                   connection 'scm:git@github.com:greenrobot/greenDAO.git'
//                   developerConnection 'scm:git@github.com:greenrobot/greenDAO.git'
//               }
//
//               licenses {
//                   license {
//                       name 'GNU General Public License, Version 3'
//                       url 'http://www.gnu.org/licenses/gpl.txt'
//                       distribution 'repo'
//                   }
//               }
//
//               developers {
//                   developer {
//                       id 'greenrobot'
//                       name 'greenrobot'
//                   }
//               }
//
//               issueManagement {
//                   system 'GitHub Issues'
//                   url 'https://github.com/greenrobot/greenDAO/issues'
//               }
//
//               organization {
//                   name 'greenrobot'
//                   url 'http://greenrobot.de'
//               }
//           }
//        }
//    }
//}
//


ext {
    bintrayRepo = 'maven'
    bintrayName = 'DaoGenerator'

    publishedGroupId = 'com.lijinchao'
    libraryName = 'DaoGenerator'
    artifact = 'DaoGenerator'

    libraryDescription = 'just print hello'

    siteUrl = 'https://github.com/jcenter/greenDAO'
    gitUrl = 'https://github.com/jcenter/greenDAO.git'

    libraryVersion = '3.1.4'


    developerId = 'lijinchao2007'
    developerName = 'lijinchao2007'
    developerEmail = 'lijinchao2007@163.com'

    licenseName = 'The Apache Software License, Version 2.0'
    licenseUrl = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
    allLicenses = ["Apache-2.0"]
}

apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.github.dcendents.android-maven'

version = libraryVersion
group = publishedGroupId
archivesBaseName = artifact

artifacts {
    archives jar
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'jar'
                groupId publishedGroupId
                artifactId artifact

                // Add your description here
                name libraryName
                description libraryDescription
                url siteUrl

                // Set your license
                licenses {
                    license {
                        name licenseName
                        url licenseUrl
                    }
                }
                developers {
                    developer {
                        id developerId
                        name developerName
                        email developerEmail
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl

                }
            }
        }
    }
}

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    configurations = ['archives']
    pkg {
        repo = bintrayRepo
        name = bintrayName
        desc = libraryDescription
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = allLicenses
        publish = true
        publicDownloadNumbers = true
        version {
            desc = libraryDescription
            gpg {
                sign = true //Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                //Optional. The passphrase for GPG signing'
            }
        }
    }
}
